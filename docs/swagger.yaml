basePath: /api/v1
definitions:
  dto.CreatePersonRequest:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    required:
    - name
    - surname
    type: object
  dto.PersonListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.PersonResponse'
        type: array
      limit:
        type: integer
      page:
        type: integer
      total_count:
        type: integer
    type: object
  dto.PersonResponse:
    properties:
      age:
        type: integer
      created_at:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
  dto.UpdatePersonRequest:
    properties:
      age:
        type: integer
      gender:
        type: string
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for Name IQ Finder service
  title: Name IQ Finder API
  version: "1.0"
paths:
  /api/v1/persons:
    get:
      description: Get all persons with optional filtering and pagination
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Filter by name
        in: query
        name: name
        type: string
      - description: Filter by surname
        in: query
        name: surname
        type: string
      - description: Filter by nationality
        in: query
        name: nationality
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PersonListResponse'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      tags:
      - persons
    post:
      consumes:
      - application/json
      description: Create a new person with enriched data
      parameters:
      - description: Person data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePersonRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.PersonResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      tags:
      - persons
  /api/v1/persons/{id}:
    delete:
      description: Delete a person by ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      tags:
      - persons
    get:
      description: Get a person by ID
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PersonResponse'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      tags:
      - persons
    put:
      consumes:
      - application/json
      description: Update an existing person
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      - description: Person data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePersonRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PersonResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      tags:
      - persons
swagger: "2.0"
